{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Notice.tsx","src/components/ApproveButton.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/Select.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/UnsupportedButton.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","onPress","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","tiny","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","TokenSymbol","medium","caption","marginLeft","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","small","width","name","Item","ITEM_SEPARATOR_HEIGHT","paddingLeft","paddingRight","selected","selectable","setOption","undefined","option","alignItems","flex","description","Select","expanded","onExpand","options","map","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","UnsupportedButton","state","fromSymbol","toSymbol","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","FlexView","TokenLogo","View","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","onChangeSymbol","includes","ExperimentalNotice","onPressContract","useLinker","contractURL","marginVertical","useSwapState","useTokenPairState","chainId","signer","kovanSigner","updateTokens","getTrade","useSDK","useSwapRouter","swap","calculateSwapFee","useSettlement","calculateLimitOrderFee","calculateLimitOrderReturn","createOrder","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","fromToken","isWETH","constants","WeiPerEther","Token","toToken","WETH","Fetcher","fetchPairData","pair","parseBalance","priceOf","toFixed","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","sub","onSwap","result","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","isETH","Swap","large","Border","OrderTypeSelect","FromTokenSelect","customTokens","Heading","ETH","ToTokenSelect","limit","setToSymbol","AmountInput","TokenInput","onAmountChanged","setFromAmount","AmountNotice","lte","PriceInput","marketPrice","executionPrice","invert","Zero","maxButtonText","LimitOrderUnsupportedNotice","NoPairNotice","TradeInfo","isETHWETHPair","InfoBox","WrapInfo","SwapInfo","outputAmount","price","impact","priceImpact","Meta","label","SwapControls","error","setError","approveRequired","fromTokenAllowed","gt","FetchingButton","ROUTER","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","LimitOrderInfo","d","LimitOrderControls","getTokenAllowance","allowed","setAllowed","SETTLEMENT","allowance","BigNumber","from","gte","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/8.59ed452b.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    return (\n        <View>\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\n                {props.options.map(option => (\n                    <Item\n                        key={option.key}\n                        option={option}\n                        setOption={props.setOption}\n                        selected={option.key === props.option?.key}\n                    />\n                ))}\n            </Expandable>\n            {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\n                    <Text note={true} style={{ marginTop: 4 }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const t = useTranslation();\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={t(\"experimental-notice\")}\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, isETH, isWETH, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSettlement from \"./useSettlement\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const { calculateLimitOrderFee, calculateLimitOrderReturn } = useSettlement();\n    const { createOrder } = useSettlement();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (isWETH(state.fromToken)) {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken, provider);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [chainId, provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (isETH(state.fromToken) || isETH(state.toToken)),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Select, { Option } from \"../components/Select\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"new-order\")} />\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View style={{ marginTop: Spacing.small }}>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const options: Option[] = [\n        { key: \"market\", title: t(\"market-order\"), description: t(\"market-order-desc\") },\n        { key: \"limit\", title: t(\"limit-order\"), description: t(\"limit-order-desc\") }\n    ];\n    return (\n        <View>\n            <Select\n                title={t(\"order-type\")}\n                options={options}\n                option={options.find(option => option.key === state.orderType)}\n                setOption={option => state.setOrderType(option?.key as OrderType | undefined)}\n            />\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { tokens, customTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={t(\"token-to-sell\")} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => isETH(token)) : null;\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token =>\n                    (!customTokens.find(tk => tk.address === token.address) && token.balance.isZero()) ||\n                    (state.orderType === \"limit\" && isETH(token))\n                }\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    const limit = state.orderType === \"limit\";\n    const onChangeSymbol = (symbol: string) => {\n        state.setToSymbol(limit && symbol === \"ETH\" ? \"WETH\" : symbol);\n    };\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={onChangeSymbol}\n                hidden={token => token.symbol === state.fromSymbol || (limit && isETH(token))}\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? t(\"token-not-supported-in-beta\")\n                        : t(\"maximum-allowed-amount-in-beta\", {\n                              amount: formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals),\n                              symbol: state.fromSymbol\n                          })\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"minimum-price\")} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.invert().toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={t(\"minimum-price\") + \" (\" + state.fromSymbol + \"/\" + state.toSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={t(\"-market-\")}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"eth-not-supported-for-limit-orders\")}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small, marginHorizontal: Spacing.tiny }}\n        />\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && isETH(state.fromToken)) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"price-impact\")} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            isEmptyValue(state.fromAmount) ||\n            (!state.loading && !state.trade) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={t(\"swap-\", {\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\n            })}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={t(\"market-price\")}\n                text={state.trade?.executionPrice?.invert().toFixed(8) || undefined}\n                suffix={state.fromSymbol + \" / \" + state.toSymbol}\n                disabled={d}\n            />\n            <Meta label={t(\"relayer-fee-amount\")} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"swap-fee-amount\")} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"expiration\")} text={t(\"24-hours-from-now\")} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.invert().toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"set-price-greater-than-market\")} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return (\n        <Button title={t(\"place-limit-order\")} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />\n    );\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}